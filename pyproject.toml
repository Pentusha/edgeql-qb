[tool.poetry]
name = "edgeql_qb"
version = "0.4.3"
description = "EdgeQL Query Builder"
authors = ["Ivan Larin <pentusha@gmail.com>"]
license = "MIT"
maintainers = ["Ivan Larin <pentusha@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/Pentusha/edgeql-qb"
repository = "https://github.com/Pentusha/edgeql-qb"
keywords = ["edgedb", "edgeql"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [
    { include = "edgeql_qb" },
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
mypy = "^1.0.1"
pre-commit = "^3.1.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
edgedb = "^1.3.0"
ruff = "^0.0.253"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
]
ignore = ["D10", "D203", "D213"]
line-length = 99
select = [
    "C9",  # mccabe
    "D",  # pycodestyle
    "E",  # error
    "F",  # pyflakes
    "W",  # warning
    "Q",  # flake8-quotes
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "ERA",  # flake8-eradicate
    "DTZ",  # flake8-datetimez
    "UP",  # pyupgrade
    "FBT",  # flake8-boolean-trap
    "I",  # isort
    "RUF",  # ruff specific
    "PL",  # pylint
    "PIE",  # flake8-pie
    "G",  # flake8-logging-format
    "C4",  # flake8-comprehensions
    "N",  # pep8-naming
    "COM",  # flake8-commas
]

[tool.ruff.mccabe]
max-complexity = 3

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401",
    "F403",
]
"tests/**/test_*.py" = ["D10", "PLR2004"]
"edgeql_qb/types.py" = ["N801"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-implicit-str-concat]
allow-multiline = false
