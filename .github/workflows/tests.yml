name: Tests

on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  quality:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12' ]

    steps:
      - uses: actions/checkout@v4

      - uses: edgedb/setup-edgedb@v1

      - run: edgedb project init --non-interactive --server-start-conf=manual --server-instance=tests
        working-directory: tests

      - run: edgedb instance start --instance tests
        working-directory: tests

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1.4
        with:
          version: 1.7.1

      - name: Install dependencies
        run: poetry install

      - name: Run ruff
        run: poetry run ruff check .

      - name: Run mypy
        run: poetry run mypy .

      - name: Run pyright
        run: poetry run pyright .

      - name: Run tests
        run: poetry run pytest
        env:
          PYTHONPATH: ..
        working-directory: tests

      - name: Fix code coverage paths
        run: |
          sed -i 's/\/home\/runner\/work\/edgeql-qb\/edgeql-qb\//\/github\/workspace\//g' tests/artefacts/coverage.xml

      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  automerge:
    runs-on: ubuntu-latest
    needs: quality
    permissions: write-all
    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
    steps:
      - name: automerge
        uses: pascalgn/automerge-action@v0.16.4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""

  release:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: quality
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - uses: snok/install-poetry@v1.4
        with:
          version: 1.7.1

      - name: Install dependencies
        run: poetry install

      - name: Get version
        run: |
          TAG=${{ github.ref_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: Set package version ${{ env.VERSION }}
        run: poetry version ${{ env.VERSION }}

      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
